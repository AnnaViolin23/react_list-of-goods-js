{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_NAME","SORT_BY_LENGTH","REVERSE","RESET","LIGTH_COLOR_STYLE","App","useState","sortField","setSortField","sortOrder","setSortOrder","goodsForSort","goods","sortBy","order","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","resetGoods","Reset","type","onClick","className","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,sBACfC,EAAiB,iBACjBC,EAAU,UACVC,EAAQ,QAERC,EAAoB,WA4BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA7BR,SAA0BC,EAA1B,GAA0D,IAAvBC,EAAsB,EAAtBA,OAAsB,IAAdC,aAAc,MAAN,GAAM,EACjDC,EAAa,YAAOH,GAE1B,OAAIC,IACFE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAKb,EACH,OAAOiB,EAAME,cAAcD,GAE7B,KAAKjB,EACH,OAAOgB,EAAMG,OAASF,EAAME,OAG9B,QACE,OAAO,MAITN,IAAUZ,GACLa,EAAcM,UAIlBN,EAMcO,CAAiBvB,EACpC,CAAEc,OAAQN,EAAWO,MAAOL,IAUxBc,EAAa,WACjBf,EAAaL,GACbK,EAAa,IACbE,EAAa,KAGTc,EAAQ,kBACZ,wBACEC,KAAK,SACLC,QAASH,EACTI,UAAU,4BAHZ,oBASF,OACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEF,KAAK,SACLE,UAAS,yBAAoBpB,IAAcP,EAAe,GAAKI,GAC/DsB,QAAS,kBAAMlB,EAAaR,IAH9B,iCAQA,wBACEyB,KAAK,SACLE,UAAS,4BAAuBpB,IAAcN,EAAiB,GAAKG,GACpEsB,QAAS,kBAAMlB,EAAaP,IAH9B,4BAQA,wBACEwB,KAAK,SACLE,UAAS,4BAAuBlB,IAAcP,EAAU,GAAKE,GAC7DsB,QA9Ca,WAEjBhB,EADED,IAAcP,EACH,GAEAA,IAuCX,sBAQEK,GAAaE,IAAc,cAACe,EAAD,OAG/B,6BACGb,EAAaiB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7G1DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c6b374f4.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_NAME = 'Sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\nconst REVERSE = 'Reverse';\nconst RESET = 'Reset';\n\nconst LIGTH_COLOR_STYLE = 'is-light';\n\nfunction getPreparedGoods(goods, { sortBy, order = '' }) {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SORT_BY_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        case RESET:\n        default:\n          return 0;\n      }\n    });\n\n    if (order === REVERSE) {\n      return preparedGoods.reverse();\n    }\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortOrder, setSortOrder] = useState('');\n  const goodsForSort = getPreparedGoods(goodsFromServer,\n    { sortBy: sortField, order: sortOrder });\n\n  const reverseGoods = () => {\n    if (sortOrder === REVERSE) {\n      setSortOrder('');\n    } else {\n      setSortOrder(REVERSE);\n    }\n  };\n\n  const resetGoods = () => {\n    setSortField(RESET);\n    setSortField('');\n    setSortOrder('');\n  };\n\n  const Reset = () => (\n    <button\n      type=\"button\"\n      onClick={resetGoods}\n      className=\"button is-danger is-light\"\n    >\n      Reset\n    </button>\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortField === SORT_BY_NAME ? '' : LIGTH_COLOR_STYLE}`}\n          onClick={() => setSortField(SORT_BY_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortField === SORT_BY_LENGTH ? '' : LIGTH_COLOR_STYLE}`}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${sortOrder === REVERSE ? '' : LIGTH_COLOR_STYLE}`}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {(sortField || sortOrder) && <Reset />}\n      </div>\n\n      <ul>\n        {goodsForSort.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}